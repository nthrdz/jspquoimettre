require('dotenv').config({ path: '.env.local' })
const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function checkUsers() {
  try {
    console.log('üîç V√©rification des utilisateurs dans la base de donn√©es...\n')
    console.log('üîó DATABASE_URL:', process.env.DATABASE_URL ? '‚úÖ D√©fini' : '‚ùå Non d√©fini')
    console.log('')
    
    const users = await prisma.user.findMany({
      include: {
        profile: true
      }
    })
    
    console.log(`üìä Nombre d'utilisateurs trouv√©s: ${users.length}\n`)
    
    users.forEach((user, index) => {
      console.log(`üë§ Utilisateur ${index + 1}:`)
      console.log(`   ID: ${user.id}`)
      console.log(`   Email: ${user.email}`)
      console.log(`   Nom: ${user.name || 'Non d√©fini'}`)
      console.log(`   Mot de passe: ${user.password ? '‚úÖ D√©fini' : '‚ùå Non d√©fini'}`)
      console.log(`   Profil: ${user.profile ? '‚úÖ Cr√©√©' : '‚ùå Non cr√©√©'}`)
      if (user.profile) {
        console.log(`   Username: ${user.profile.username}`)
        console.log(`   Plan: ${user.profile.plan}`)
      }
      console.log(`   Cr√©√© le: ${user.createdAt}`)
      console.log('   ' + '‚îÄ'.repeat(50))
    })
    
    if (users.length === 0) {
      console.log('‚ùå Aucun utilisateur trouv√© dans la base de donn√©es!')
      console.log('üí° Vous devez d\'abord cr√©er un compte via /signup')
    }
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la v√©rification:', error)
  } finally {
    await prisma.$disconnect()
  }
}

checkUsers()
