require('dotenv-flow').config({
  path: './',
  default_node_env: 'development',
  silent: true
})
const { createClient } = require('@supabase/supabase-js')

async function setupSupabaseAuth() {
  const supabase = createClient(
    process.env.NEXT_PUBLIC_SUPABASE_URL,
    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY
  )

  try {
    console.log('üîß Configuration de Supabase Auth...\n')

    // Test de connexion
    const { data, error } = await supabase.auth.getSession()
    if (error) {
      console.log('‚ùå Erreur de connexion Supabase:', error.message)
      return
    }

    console.log('‚úÖ Connexion Supabase r√©ussie')

    // V√©rifier la configuration actuelle
    console.log('\nüìä Configuration actuelle:')
    console.log(`   URL: ${process.env.NEXT_PUBLIC_SUPABASE_URL}`)
    console.log(`   Anon Key: ${process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY ? '‚úÖ D√©fini' : '‚ùå Non d√©fini'}`)
    console.log(`   Service Key: ${process.env.SUPABASE_SERVICE_ROLE_KEY ? '‚úÖ D√©fini' : '‚ùå Non d√©fini'}`)

    console.log('\nüîß Instructions pour configurer Supabase Auth:')
    console.log('1. üåê Allez sur https://supabase.com/dashboard')
    console.log('2. üîê Connectez-vous avec votre compte')
    console.log(`3. üìÅ S√©lectionnez le projet: ${process.env.NEXT_PUBLIC_SUPABASE_URL.split('.')[0].replace('https://', '')}`)
    console.log('4. üîë Allez dans "Authentication" > "Settings"')
    console.log('5. ‚öôÔ∏è Configurez les param√®tres suivants:')
    console.log('   - Site URL: http://localhost:3001')
    console.log('   - Redirect URLs: http://localhost:3001/dashboard')
    console.log('   - Email confirmation: D√âSACTIV√â (pour le d√©veloppement)')
    console.log('   - Enable email confirmations: OFF')
    console.log('6. üíæ Sauvegardez les modifications')

    console.log('\nüîë Pour migrer les utilisateurs, vous aurez besoin de la SERVICE_ROLE_KEY')
    console.log('   Allez dans "Project Settings" > "API" pour la r√©cup√©rer')

  } catch (error) {
    console.error('‚ùå Erreur lors de la configuration:', error.message)
  }
}

setupSupabaseAuth()
